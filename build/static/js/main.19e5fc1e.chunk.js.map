{"version":3,"sources":["DisplayPeople.js","Search.js","NewPerson.js","server/PhoneService.js","Message.js","App.js","index.js"],"names":["DisplayPeople","PeopleToshow","deletePerson","map","person","key","name","number","onClick","id","Search","searchText","handleSearch","value","onChange","NewPerson","props","onSubmit","handleAdd","newName","handleInputName","newNumber","handleInputNumber","type","baseURL","axios","get","then","reponse","data","post","JSON","stringify","headers","response","delete","updatedPerson","put","MessageDisplay","messageDisplay","message","className","App","useState","persons","setPersons","useEffect","phoneBookService","setSearchText","setNewName","setNewNumber","newMessage","setMessage","e","target","_searchText","toLowerCase","filter","indexOf","Message","preventDefault","returnedPerson","concat","setTimeout","catch","err","error","errMessage","window","confirm","find","changedPerson","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19e5fc1e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst DisplayPeople = ({PeopleToshow,deletePerson}) => {\r\n    return (\r\n    <div>\r\n    <h2>Numbers</h2>\r\n        {PeopleToshow().map(person => \r\n        <div key={person.name}>\r\n            <p>{person.name}</p>\r\n            <p>{person.number}</p>\r\n            <button onClick={()=> deletePerson(person.id)} >Delete</button>\r\n        </div>\r\n        )}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default DisplayPeople","import React from 'react';\r\n\r\nconst Search = ({searchText,handleSearch}) =>\r\n    <div>Filter show with <input value={searchText} onChange={handleSearch} /></div>\r\n\r\nexport default Search","import React from 'react';\r\n\r\nconst NewPerson = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleAdd}>\r\n        <div>name: <input value={props.newName} onChange={props.handleInputName} /></div>\r\n        <div>number <input value={props.newNumber} onChange= {props.handleInputNumber}/></div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default NewPerson","import axios from 'axios';\r\n\r\nconst baseURL = `/api/persons`;\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseURL)\r\n    return request.then(reponse => reponse.data)\r\n}\r\n\r\nconst addPerson = (person) => {\r\n    const request = axios.post(baseURL, JSON.stringify(person),{\r\n        headers: {'Content-Type': 'application/json'}\r\n    });\r\n    \r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseURL}/${id}`);\r\n    return request.then(response => response)\r\n}\r\n\r\nconst replacePerson = (id,updatedPerson) => {\r\n    const request = axios.put(`${baseURL}/${id}`,updatedPerson,{\r\n        headers: {'Content-Type': 'application/json'}\r\n    });\r\n    return request.then(response => response.data);\r\n}\r\n\r\n\r\nexport default {getAll,addPerson,deletePerson,replacePerson}","import React from 'react';\r\n\r\nconst MessageDisplay = ({messageDisplay}) => {\r\n    if(!messageDisplay.message){\r\n        return ''\r\n    };\r\n    return (\r\n        <div className={`message-action-${messageDisplay.type}`}>\r\n            {messageDisplay.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageDisplay","import React, { useState, useEffect } from \"react\";\r\nimport DisplayPeople from \"./DisplayPeople\";\r\nimport Search from \"./Search\";\r\nimport NewPerson from \"./NewPerson\";\r\nimport phoneBookService from \"./server/PhoneService\";\r\nimport MessageDisplay from \"./Message\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  useEffect(() => {\r\n    phoneBookService.getAll().then((persons) => setPersons(persons));\r\n  }, []);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [newMessage,setMessage] = useState({message:'',type:''});\r\n\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchText(e.target.value);\r\n  };\r\n\r\n  let PeopleToshow = () => {\r\n    const _searchText = searchText.toLowerCase();\r\n    if (!_searchText) {\r\n      PeopleToshow = [...persons];\r\n    } else {\r\n      PeopleToshow = persons.filter(\r\n        (person) =>\r\n          person.name.toLowerCase().indexOf(_searchText) !== -1 ||\r\n          person.number.indexOf(_searchText) !== -1\r\n      );\r\n    }\r\n    return PeopleToshow;\r\n  };\r\n\r\n  const handleInputName = (e) => {\r\n    setNewName(e.target.value);\r\n  };\r\n\r\n  const handleInputNumber = (e) => {\r\n    setNewNumber(e.target.value);\r\n  };\r\n  const handleAdd = (e) => {\r\n    e.preventDefault();\r\n    const nameArr = persons.map((person) => person.name);\r\n\r\n    if (nameArr.indexOf(newName) === -1) {\r\n      const newPerson = {\r\n        name: newName,\r\n        number: newNumber,\r\n      };\r\n      // setPersons(persons.concat(newPerson));\r\n\r\n      phoneBookService.addPerson(newPerson)\r\n      .then((returnedPerson) => {\r\n        setPersons(persons.concat(returnedPerson)\r\n        );\r\n        setNewName(\"\");\r\n        setNewNumber(\"\");\r\n        setMessage({message: `Added ${newName}`,type:'success'});\r\n        setTimeout(() => {\r\n          setMessage(\"\");\r\n        }, 5000);\r\n      })\r\n      .catch(err => err.response.data.error)\r\n      .then(errMessage => setMessage({message:errMessage,type:\"error\"}))\r\n      ;\r\n    } else {\r\n      let confirmReplace = window.confirm(\r\n        `This person is already added in the phonebook, do you want to replace this person?`\r\n      );\r\n      if (confirmReplace) {\r\n        const person = persons.find((person) => person.name === newName);\r\n        const changedPerson = { ...person, name: newName, number: newNumber };\r\n        phoneBookService\r\n          .replacePerson(changedPerson.id, changedPerson)\r\n          .then((returnedPerson) =>{\r\n            setPersons(\r\n              persons.map((person) =>\r\n                person.id !== changedPerson.id ? person : returnedPerson\r\n              )\r\n            );\r\n            });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    let confirmDelete = window.confirm(\r\n      `Do you want to delete this person from phone book?`\r\n    );\r\n    if (confirmDelete) {\r\n      phoneBookService\r\n        .deletePerson(id)\r\n        .then(() => setPersons(persons.filter((person) => person.id !== id)))\r\n        .catch((error) => {\r\n          setMessage({message: `Information of ${(persons.find(person => person.id === id).name)} had already been removed from the server`,type:'error'});\r\n          setTimeout(()=>{\r\n            setMessage({message:'',error:''});\r\n          },5000);\r\n          setPersons(persons.filter((person) => person.id !== id));\r\n        })\r\n  }}\r\n  ;\r\n  \r\n  return (\r\n    <div>\r\n      <h2> Phonebook </h2>\r\n      <MessageDisplay messageDisplay={newMessage} />\r\n      <Search searchText={searchText} handleSearch={handleSearch} />\r\n      <NewPerson\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        handleSearch={handleSearch}\r\n        handleAdd={handleAdd}\r\n        handleInputName={handleInputName}\r\n        handleInputNumber={handleInputNumber}\r\n      />\r\n      <DisplayPeople PeopleToshow={PeopleToshow} deletePerson={handleDelete} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}